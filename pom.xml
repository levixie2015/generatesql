<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lw</groupId>
    <artifactId>generatesql</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.jexcelapi</groupId>
            <artifactId>jxl</artifactId>
            <version>2.6.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.17-beta1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.17-beta1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.17-beta1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.16</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <fruit>APPLE</fruit>
            </properties>
            <build>
                <plugins>

                    <!--maven-compiler-plugin，用于代码编译  -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.6.0</version>
                        <configuration>
                            <source>1.7</source>
                            <target>1.7</target>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <archive>
                                <!-- 生成的jar中，是否包含pom.xml和pom.properties这两个文件-->
                                <addMavenDescriptor>true</addMavenDescriptor>
                                <manifest>
                                    <!-- 是否要把第三方jar放到manifest的classpath中-->
                                    <addClasspath>true</addClasspath>
                                    <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/-->
                                    <classpathPrefix>lib/</classpathPrefix>
                                    <!-- 应用的main class-->
                                    <mainClass>com.lw.sql.SqlOperate</mainClass>
                                </manifest>
                                <manifestEntries>
                                    <Class-Path>./</Class-Path>
                                </manifestEntries>
                            </archive>

                            <!-- jar包的位置-->
                            <outputDirectory>${project.build.directory}/</outputDirectory>

                            <!-- 过滤掉不希望包含在jar中的文件-->
                            <excludes>
                                <!--<exclude>**.properties</exclude>-->
                                <!--<exclude>**.xlsx</exclude>-->
                            </excludes>
                            <includes>
                                <!-- 打jar包时，只打包class文件 -->
                                <!-- 有时候可能需要一些其他文件，这边可以配置，包括剔除的文件等等-->
                                <include>**/*.class</include>
                            </includes>
                        </configuration>
                    </plugin>

                    <!-- maven-dependency-plugin，用来拷贝项目所有依赖的插件-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <!-- 拷贝项目依赖包到lib/目录下 -->
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <!-- 间接依赖也拷贝 -->
                                    <excludeTransitive>false</excludeTransitive>
                                    <!-- 带上版本号 -->
                                    <stripVersion>false</stripVersion>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- maven-resources-plugin，用来拷贝项目中的一些资源文件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <!-- 一个execution就是一个目标输入位置，如果想把各种资源拆开放的话，就
                            可以创建多个execution，一个资源文件可以被拷贝多份 -->
                            <execution>
                                <id>copy-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <encoding>UTF-8</encoding>
                                    <!-- 资源文件的输出目录  参考：Maven属性（properties）标签的使用-->
                                    <outputDirectory>${project.build.outputDirectory}/config</outputDirectory>
                                    <resources>
                                        <!-- 资源文件的原始目录，有多个的话就多配几个 -->
                                        <resource>
                                            <!-- 原始目录 -->
                                            <directory>src/main/resources</directory>
                                            <!-- 是否使用过滤器，如果是的话，需要配置一下才行
                                            这个后续再研究，这边没有使用到 -->
                                            <filtering>true</filtering>
                                            <!-- 包含哪些文件以及去除调哪些文件等等 -->
                                            <includes>
                                                <include>**/*.*</include>
                                            </includes>
                                            <excludes>
                                                <exclude>**/tempate/*.xlsx</exclude>
                                                <exclude>**/config/*.properties</exclude>
                                            </excludes>
                                        </resource>

                                        <resource>
                                            <directory>src/main/config</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>**/*.properties*</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/tempate</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>**/*.xlsx</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- 该插件的echo任务来打印属性信息-->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echo>Fruit:${fruit}</echo>
                                        <echo>{project.build.directory}:${project.build.directory}</echo>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>Nexus Release Repository</name>
            <url>http://192.168.80.110:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://192.168.80.110:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>nexus-public</id>
            <name>nexus-public</name>
            <url>http://192.168.80.110:8081/nexus/content/repositories/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
</project>